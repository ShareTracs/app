{
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/app.component.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/app.component.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":86}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"6":{"start":{"line":23,"column":0},"end":{"line":89,"column":0}},"7":{"start":{"line":35,"column":11},"end":{"line":35,"column":23}},"8":{"start":{"line":36,"column":11},"end":{"line":36,"column":29}},"9":{"start":{"line":37,"column":11},"end":{"line":37,"column":32}},"10":{"start":{"line":38,"column":11},"end":{"line":38,"column":37}},"11":{"start":{"line":39,"column":11},"end":{"line":39,"column":39}},"12":{"start":{"line":40,"column":11},"end":{"line":40,"column":45}},"13":{"start":{"line":26,"column":2},"end":{"line":26,"column":31}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":44}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":55}},"16":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}},"17":{"start":{"line":32,"column":2},"end":{"line":32,"column":17}},"18":{"start":{"line":43,"column":9},"end":{"line":47,"column":3}},"19":{"start":{"line":43,"column":2},"end":{"line":47,"column":2}},"20":{"start":{"line":44,"column":4},"end":{"line":46,"column":43}},"21":{"start":{"line":46,"column":24},"end":{"line":46,"column":41}},"22":{"start":{"line":49,"column":2},"end":{"line":59,"column":3}},"23":{"start":{"line":50,"column":4},"end":{"line":50,"column":29}},"24":{"start":{"line":51,"column":4},"end":{"line":56,"column":5}},"25":{"start":{"line":52,"column":16},"end":{"line":52,"column":42}},"26":{"start":{"line":53,"column":6},"end":{"line":53,"column":35}},"27":{"start":{"line":54,"column":6},"end":{"line":54,"column":35}},"28":{"start":{"line":55,"column":6},"end":{"line":55,"column":33}},"29":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"30":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"31":{"start":{"line":62,"column":4},"end":{"line":62,"column":31}},"32":{"start":{"line":65,"column":2},"end":{"line":73,"column":3}},"33":{"start":{"line":65,"column":2},"end":{"line":73,"column":2}},"34":{"start":{"line":66,"column":4},"end":{"line":66,"column":41}},"35":{"start":{"line":67,"column":4},"end":{"line":72,"column":7}},"36":{"start":{"line":71,"column":8},"end":{"line":71,"column":40}},"37":{"start":{"line":75,"column":2},"end":{"line":88,"column":3}},"38":{"start":{"line":76,"column":4},"end":{"line":76,"column":26}},"39":{"start":{"line":77,"column":4},"end":{"line":87,"column":6}},"40":{"start":{"line":81,"column":10},"end":{"line":81,"column":66}},"41":{"start":{"line":85,"column":35},"end":{"line":85,"column":52}},"42":{"start":{"line":89,"column":0},"end":{"line":89,"column":1}},"43":{"start":{"line":23,"column":0},"end":{"line":89,"column":1}},"44":{"start":{"line":23,"column":13},"end":{"line":23,"column":25}}},"fnMap":{"1":{"name":"(anonymous_0)","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":-1}}},"2":{"name":"AppComponent","line":40,"loc":{"start":{"line":40,"column":45},"end":{"line":41,"column":4}}},"3":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":2},"end":{"line":47,"column":3}}},"4":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":20},"end":{"line":46,"column":41}}},"5":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":22},"end":{"line":59,"column":3}}},"6":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":18},"end":{"line":58,"column":26}}},"7":{"name":"(anonymous_6)","line":61,"loc":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}}},"8":{"name":"(anonymous_7)","line":65,"loc":{"start":{"line":65,"column":2},"end":{"line":73,"column":3}}},"9":{"name":"(anonymous_8)","line":69,"loc":{"start":{"line":69,"column":27},"end":{"line":72,"column":5}}},"10":{"name":"(anonymous_9)","line":75,"loc":{"start":{"line":75,"column":2},"end":{"line":88,"column":3}}},"11":{"name":"(anonymous_10)","line":80,"loc":{"start":{"line":80,"column":40},"end":{"line":82,"column":9}}},"12":{"name":"(anonymous_11)","line":85,"loc":{"start":{"line":85,"column":33},"end":{"line":85,"column":53}}}},"branchMap":{"1":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":56,"column":5}},{"start":{"line":51,"column":4},"end":{"line":56,"column":5}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":23},"end":{"line":36,"column":29}},{"start":{"line":36,"column":29},"end":{"line":37,"column":17}},{"start":{"line":36,"column":29},"end":{"line":37,"column":17}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":23},"end":{"line":36,"column":29}},{"start":{"line":36,"column":21},"end":{"line":36,"column":29}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":29},"end":{"line":37,"column":32}},{"start":{"line":37,"column":32},"end":{"line":38,"column":24}},{"start":{"line":37,"column":32},"end":{"line":38,"column":24}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":29},"end":{"line":37,"column":32}},{"start":{"line":37,"column":18},"end":{"line":37,"column":32}}]},"6":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":32},"end":{"line":38,"column":37}},{"start":{"line":38,"column":37},"end":{"line":39,"column":25}},{"start":{"line":38,"column":37},"end":{"line":39,"column":25}}]},"7":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":32},"end":{"line":38,"column":37}},{"start":{"line":38,"column":25},"end":{"line":38,"column":37}}]},"8":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":37},"end":{"line":39,"column":39}},{"start":{"line":39,"column":39},"end":{"line":40,"column":28}},{"start":{"line":39,"column":39},"end":{"line":40,"column":28}}]},"9":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":37},"end":{"line":39,"column":39}},{"start":{"line":39,"column":26},"end":{"line":39,"column":39}}]},"10":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":39},"end":{"line":40,"column":45}},{"start":{"line":40,"column":45},"end":{"line":null,"column":-1}},{"start":{"line":40,"column":45},"end":{"line":null,"column":-1}}]},"11":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":39},"end":{"line":40,"column":45}},{"start":{"line":40,"column":29},"end":{"line":40,"column":45}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":1},"b":{"1":[0,0],"2":[1,1,0],"3":[1,1],"4":[1,1,0],"5":[1,1],"6":[1,1,0],"7":[1,1],"8":[1,1,0],"9":[1,1],"10":[1,1,0],"11":[1,1]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0},"code":"import { Component, NgZone, ViewEncapsulation, ViewContainerRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppState } from './app.service';\nimport { LoginService } from './login/login.service';\nimport { DialogService } from './dialog/dialog.service';\n\n// Google's login API namespace\ndeclare var gapi: any;\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: [\n    './app.component.css',\n    './theme.scss'\n  ],\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  localState: any;\n  isDarkTheme: boolean = false;\n  result: any;\n\n  loggedIn = this.loginService.isLoggedIn();\n  userImage = '../../assets/img/user-blank-avatar.png';\n  userFullName = \"\";\n  userEmail = \"\";\n\n  constructor(\n    public zone: NgZone,\n    public appState: AppState,\n    public route: ActivatedRoute,\n    public loginService: LoginService,\n    public dialogService: DialogService,\n    public viewContainerRef: ViewContainerRef\n) {}\n\n  public openWarning() {\n    this.dialogService\n      .alert('flight', 'You have travel alerts!', this.viewContainerRef)\n      .subscribe(res => this.result = res);\n  }\n\n  setLoggedIn(loggedIn) {\n    this.loggedIn = loggedIn;\n    if (this.loggedIn) {\n      let jwt = this.loginService.getJwt();\n      this.userImage = jwt.picture;\n      this.userFullName = jwt.name;\n      this.userEmail = jwt.email;\n    }\n    // force refresh view\n    this.zone.run(() => {});\n  }\n\n  logout() {\n    this.loginService.logout();\n  }\n\n  ngOnInit() {\n    console.log('Spy: Hello from `App`');\n    this.route\n      .data\n      .subscribe((data: any) => {\n        // your resolved data from route\n        this.localState = data.yourData;\n    });\n  }\n\n  ngAfterViewInit() {\n    gapi.targetApp = this;\n    gapi.signin2.render(\n      \"g-signin2\",\n      {\n        \"onSuccess\": function(googleUser){\n          gapi.targetApp.loginService.loginWithGoogle(googleUser);\n        },\n        \"scope\": \"profile email\",\n        \"theme\": \"dark\",\n        \"onfailure\": function(err){console.log(err);}\n      }\n    );\n  }\n}\n","l":{"1":1,"2":1,"3":1,"4":1,"5":1,"23":1,"26":1,"29":1,"30":1,"31":1,"32":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"43":1,"44":0,"46":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"61":1,"62":0,"65":1,"66":1,"67":1,"71":1,"75":1,"76":0,"77":0,"81":0,"85":0,"89":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/app.service.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/app.service.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":8,"column":0},"end":{"line":41,"column":0}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":34}},"4":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":50}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":59}},"7":{"start":{"line":25,"column":2},"end":{"line":29,"column":3}},"8":{"start":{"line":27,"column":18},"end":{"line":27,"column":28}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":60}},"10":{"start":{"line":31,"column":2},"end":{"line":34,"column":3}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":37}},"12":{"start":{"line":37,"column":10},"end":{"line":40,"column":3}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":48}},"14":{"start":{"line":41,"column":0},"end":{"line":41,"column":1}},"15":{"start":{"line":8,"column":0},"end":{"line":41,"column":1}},"16":{"start":{"line":8,"column":13},"end":{"line":8,"column":21}}},"fnMap":{"1":{"name":"(anonymous_0)","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":-1}}},"2":{"name":"AppState","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}}},"3":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}}},"4":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":22,"column":3}}},"5":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":29,"column":3}}},"6":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":30},"end":{"line":34,"column":3}}},"7":{"name":"(anonymous_6)","line":37,"loc":{"start":{"line":37,"column":42},"end":{"line":40,"column":3}}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":40},"end":{"line":28,"column":51}},{"start":{"line":28,"column":54},"end":{"line":28,"column":59}}]}},"s":{"1":1,"2":1,"3":5,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":1,"16":1},"b":{"1":[0,0]},"f":{"1":1,"2":5,"3":0,"4":0,"5":0,"6":0,"7":0},"code":"import { Injectable } from '@angular/core';\n\nexport type InternalStateType = {\n  [key: string]: any\n};\n\n@Injectable()\nexport class AppState {\n  _state: InternalStateType = { };\n\n  constructor() {\n\n  }\n\n  // already return a clone of the current state\n  get state() {\n    return this._state = this._clone(this._state);\n  }\n  // never allow mutation\n  set state(value) {\n    throw new Error('do not mutate the `.state` directly');\n  }\n\n\n  get(prop?: any) {\n    // use our state getter for the clone\n    const state = this.state;\n    return state.hasOwnProperty(prop) ? state[prop] : state;\n  }\n\n  set(prop: string, value: any) {\n    // internally mutate our state\n    return this._state[prop] = value;\n  }\n\n\n  private _clone(object: InternalStateType) {\n    // simple object clone\n    return JSON.parse(JSON.stringify( object ));\n  }\n}\n","l":{"1":1,"8":1,"9":5,"16":1,"17":0,"21":0,"25":1,"27":0,"28":0,"31":1,"33":0,"37":1,"39":0,"41":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/login/login.service.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/login/login.service.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"5":{"start":{"line":11,"column":0},"end":{"line":68,"column":0}},"6":{"start":{"line":13,"column":22},"end":{"line":13,"column":32}},"7":{"start":{"line":15,"column":2},"end":{"line":31,"column":3}},"8":{"start":{"line":15,"column":2},"end":{"line":31,"column":2}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":50}},"10":{"start":{"line":18,"column":4},"end":{"line":22,"column":6}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":54}},"12":{"start":{"line":24,"column":4},"end":{"line":30,"column":6}},"13":{"start":{"line":26,"column":18},"end":{"line":26,"column":28}},"14":{"start":{"line":28,"column":16},"end":{"line":28,"column":33}},"15":{"start":{"line":29,"column":15},"end":{"line":29,"column":33}},"16":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":41}},"18":{"start":{"line":37,"column":2},"end":{"line":47,"column":3}},"19":{"start":{"line":38,"column":14},"end":{"line":42,"column":5}},"20":{"start":{"line":43,"column":4},"end":{"line":45,"column":17}},"21":{"start":{"line":44,"column":6},"end":{"line":44,"column":57}},"22":{"start":{"line":46,"column":4},"end":{"line":46,"column":15}},"23":{"start":{"line":49,"column":2},"end":{"line":56,"column":3}},"24":{"start":{"line":50,"column":14},"end":{"line":50,"column":27}},"25":{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},"26":{"start":{"line":52,"column":6},"end":{"line":52,"column":18}},"27":{"start":{"line":54,"column":6},"end":{"line":54,"column":19}},"28":{"start":{"line":58,"column":2},"end":{"line":63,"column":3}},"29":{"start":{"line":59,"column":4},"end":{"line":59,"column":42}},"30":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"31":{"start":{"line":61,"column":6},"end":{"line":61,"column":48}},"32":{"start":{"line":65,"column":2},"end":{"line":67,"column":3}},"33":{"start":{"line":66,"column":4},"end":{"line":66,"column":23}},"34":{"start":{"line":68,"column":0},"end":{"line":68,"column":1}},"35":{"start":{"line":11,"column":0},"end":{"line":68,"column":1}},"36":{"start":{"line":11,"column":13},"end":{"line":11,"column":25}}},"fnMap":{"1":{"name":"(anonymous_0)","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":-1}}},"2":{"name":"LoginService","line":13,"loc":{"start":{"line":13,"column":32},"end":{"line":13,"column":36}}},"3":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":28},"end":{"line":31,"column":3}}},"4":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":19},"end":{"line":21,"column":7}}},"5":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":14},"end":{"line":26,"column":28}}},"6":{"name":"(anonymous_5)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":33}}},"7":{"name":"(anonymous_6)","line":29,"loc":{"start":{"line":29,"column":11},"end":{"line":29,"column":33}}},"8":{"name":"(anonymous_7)","line":33,"loc":{"start":{"line":33,"column":12},"end":{"line":35,"column":3}}},"9":{"name":"(anonymous_8)","line":37,"loc":{"start":{"line":37,"column":2},"end":{"line":47,"column":3}}},"10":{"name":"(anonymous_9)","line":49,"loc":{"start":{"line":49,"column":2},"end":{"line":56,"column":3}}},"11":{"name":"(anonymous_10)","line":58,"loc":{"start":{"line":58,"column":2},"end":{"line":63,"column":3}}},"12":{"name":"(anonymous_11)","line":65,"loc":{"start":{"line":65,"column":14},"end":{"line":67,"column":3}}}},"branchMap":{"1":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},{"start":{"line":51,"column":4},"end":{"line":55,"column":5}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":11}},{"start":{"line":51,"column":15},"end":{"line":51,"column":25}},{"start":{"line":51,"column":29},"end":{"line":51,"column":74}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},{"start":{"line":60,"column":4},"end":{"line":62,"column":5}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":1,"36":1},"b":{"1":[0,1],"2":[1,0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0},"code":"import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n// Google's login API namespace\ndeclare var gapi: any;\n\n@Injectable()\nexport class LoginService {\n\n  constructor(private http: Http) {}\n\n  loginWithGoogle(googleUser) {\n\n    gapi.targetApp.setLoggedIn(this.isLoggedIn());\n    gapi.auth2.init().currentUser.listen(\n      function(user) {\n        gapi.targetApp.setLoggedIn(user.isSignedIn());\n      }\n    );\n\n    return this.http\n      .get('https://www.googleapis.com/oauth2/v3/tokeninfo?id_token='+googleUser.getAuthResponse().id_token)\n      .map(res => res.text())\n      .subscribe(\n        data => this.setJwt(data),\n        err => this.logError(err)\n    );\n  }\n\n  setJwt(jwt) {\n    localStorage.setItem('id_token',jwt);\n  }\n\n  getJwt() {\n    let jwt = {\n      name: '',\n      email: '',\n      picture: ''\n    };\n    try {\n      jwt = JSON.parse(localStorage.getItem('id_token'));\n    } catch(e) {}\n    return jwt;\n  }\n\n  isLoggedIn() {\n    let jwt = this.getJwt();\n    if (jwt && gapi.auth2 && gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('auth_token');\n    if (gapi.auth2) {\n      gapi.auth2.getAuthInstance().disconnect();\n    }\n  }\n\n  logError(err) {\n    console.error(err);\n  }\n}\n","l":{"1":1,"2":1,"4":1,"5":1,"11":1,"13":1,"15":1,"17":0,"18":0,"20":0,"24":0,"26":0,"28":0,"29":0,"33":1,"34":0,"37":1,"38":1,"43":1,"44":1,"46":1,"49":1,"50":1,"51":1,"52":0,"54":1,"58":1,"59":0,"60":0,"61":0,"65":1,"66":0,"68":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/dialog/dialog.service.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/dialog/dialog.service.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":73}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":60}},"5":{"start":{"line":8,"column":0},"end":{"line":51,"column":0}},"6":{"start":{"line":10,"column":22},"end":{"line":10,"column":38}},"7":{"start":{"line":12,"column":9},"end":{"line":31,"column":3}},"8":{"start":{"line":20,"column":17},"end":{"line":20,"column":37}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":47}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":56}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":44}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":46}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":35}},"15":{"start":{"line":33,"column":9},"end":{"line":50,"column":3}},"16":{"start":{"line":40,"column":17},"end":{"line":40,"column":37}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":47}},"18":{"start":{"line":44,"column":4},"end":{"line":44,"column":54}},"19":{"start":{"line":46,"column":4},"end":{"line":46,"column":44}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":50}},"21":{"start":{"line":49,"column":4},"end":{"line":49,"column":35}},"22":{"start":{"line":51,"column":0},"end":{"line":51,"column":1}},"23":{"start":{"line":8,"column":0},"end":{"line":51,"column":1}},"24":{"start":{"line":8,"column":13},"end":{"line":8,"column":26}}},"fnMap":{"1":{"name":"(anonymous_0)","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":-1}}},"2":{"name":"DialogService","line":10,"loc":{"start":{"line":10,"column":38},"end":{"line":10,"column":43}}},"3":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":38},"end":{"line":31,"column":3}}},"4":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":38},"end":{"line":50,"column":3}}}},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":1},"b":{},"f":{"1":1,"2":1,"3":0,"4":0},"code":"import { Observable } from 'rxjs/Rx';\nimport { AlertDialog } from './alert-dialog.component';\nimport { ConfirmDialog } from './confirm-dialog.component';\nimport { MdDialogRef, MdDialog, MdDialogConfig } from '@angular/material';\nimport { Injectable, ViewContainerRef } from '@angular/core';\n\n@Injectable()\nexport class DialogService {\n\n  constructor(private dialog: MdDialog) { }\n\n  public confirm(\n    icon: string,\n    title: string,\n    message: string,\n    viewContainerRef: ViewContainerRef\n  ): Observable<boolean> {\n\n    let dialogRef: MdDialogRef<ConfirmDialog>;\n    let config = new MdDialogConfig();\n\n    config.viewContainerRef = viewContainerRef;\n\n    dialogRef = this.dialog.open(ConfirmDialog, config);\n\n    dialogRef.componentInstance.icon = icon;\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.message = message;\n\n    return dialogRef.afterClosed();\n  }\n\n  public alert(\n    icon: string,\n    message: string,\n    viewContainerRef: ViewContainerRef\n  ): Observable<boolean> {\n\n    let dialogRef: MdDialogRef<AlertDialog>;\n    let config = new MdDialogConfig();\n\n    config.viewContainerRef = viewContainerRef;\n\n    dialogRef = this.dialog.open(AlertDialog, config);\n\n    dialogRef.componentInstance.icon = icon;\n    dialogRef.componentInstance.message = message;\n\n    return dialogRef.afterClosed();\n  }\n}\n","l":{"2":1,"3":1,"4":1,"5":1,"8":1,"10":1,"12":1,"20":0,"22":0,"24":0,"26":0,"27":0,"28":0,"30":0,"33":1,"40":0,"42":0,"44":0,"46":0,"47":0,"49":0,"51":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/dialog/alert-dialog.component.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/dialog/alert-dialog.component.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":26,"column":0},"end":{"line":34,"column":0}},"4":{"start":{"line":31,"column":23},"end":{"line":31,"column":58}},"5":{"start":{"line":34,"column":0},"end":{"line":34,"column":1}},"6":{"start":{"line":26,"column":0},"end":{"line":34,"column":1}},"7":{"start":{"line":26,"column":13},"end":{"line":26,"column":24}}},"fnMap":{"1":{"name":"(anonymous_0)","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":-1}}},"2":{"name":"AlertDialog","line":31,"loc":{"start":{"line":31,"column":58},"end":{"line":33,"column":5}}}},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1},"b":{},"f":{"1":1,"2":0},"code":"import { MdDialogRef } from '@angular/material';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'alert-dialog',\n    styleUrls: [\n      './dialog.component.css'\n    ],\n    template: `\n    <md-toolbar color=\"accent\">\n      <button md-icon-button (click)=\"dialogRef.close(true)\">\n        <md-icon>close</md-icon>\n      </button>\n    </md-toolbar>\n    <div class=\"dialog-body\">\n      <p>\n        <md-icon>{{ icon }}</md-icon>\n        <span class=\"title\">{{ message }}</span>\n      </p>\n      <p>\n        <button md-raised-button color=\"accent\" (click)=\"dialogRef.close(true)\"> OK </button>\n      </p>\n    </div>\n    `,\n})\nexport class AlertDialog {\n\n    public icon: string;\n    public message: string;\n\n    constructor(public dialogRef: MdDialogRef<AlertDialog>) {\n\n    }\n}\n","l":{"1":1,"2":1,"26":1,"31":0,"34":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/dialog/confirm-dialog.component.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/dialog/confirm-dialog.component.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":31,"column":0},"end":{"line":40,"column":0}},"4":{"start":{"line":37,"column":23},"end":{"line":37,"column":60}},"5":{"start":{"line":40,"column":0},"end":{"line":40,"column":1}},"6":{"start":{"line":31,"column":0},"end":{"line":40,"column":1}},"7":{"start":{"line":31,"column":13},"end":{"line":31,"column":26}}},"fnMap":{"1":{"name":"(anonymous_0)","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":-1}}},"2":{"name":"ConfirmDialog","line":37,"loc":{"start":{"line":37,"column":60},"end":{"line":39,"column":5}}}},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1},"b":{},"f":{"1":1,"2":0},"code":"import { MdDialogRef } from '@angular/material';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'confirm-dialog',\n    styleUrls: [\n      './dialog.component.css'\n    ],\n    template: `\n        <md-toolbar color=\"accent\">\n          <button md-icon-button (click)=\"dialogRef.close(true)\">\n            <md-icon>close</md-icon>\n          </button>\n        </md-toolbar>\n        <div class=\"dialog-body\">\n          <p>\n            <md-icon>{{ icon }}</md-icon>\n            <span class=\"title\">{{ title }}</span>\n          </p>\n          <hr>\n          <p>\n            <span class=\"message\">{{ message }}</span>\n          </p>\n          <p>\n            <button md-raised-button color=\"accent\" (click)=\"dialogRef.close(true)\"> OK </button>\n            <button md-raised-button (click)=\"dialogRef.close()\"> Cancel </button>\n          </p>\n        </div>\n    `,\n})\nexport class ConfirmDialog {\n\n    public icon: string;\n    public title: string;\n    public message: string;\n\n    constructor(public dialogRef: MdDialogRef<ConfirmDialog>) {\n\n    }\n}\n","l":{"1":1,"2":1,"31":1,"37":0,"40":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/home/home.component.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/home/home.component.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"5":{"start":{"line":24,"column":0},"end":{"line":44,"column":0}},"6":{"start":{"line":29,"column":21},"end":{"line":29,"column":39}},"7":{"start":{"line":29,"column":48},"end":{"line":29,"column":60}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":29}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":37}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":39}},"11":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"13":{"start":{"line":39,"column":2},"end":{"line":43,"column":3}},"14":{"start":{"line":40,"column":4},"end":{"line":40,"column":38}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":38}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":31}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":1}},"18":{"start":{"line":24,"column":0},"end":{"line":44,"column":1}},"19":{"start":{"line":24,"column":13},"end":{"line":24,"column":26}}},"fnMap":{"1":{"name":"(anonymous_0)","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":-1}}},"2":{"name":"HomeComponent","line":29,"loc":{"start":{"line":29,"column":60},"end":{"line":32,"column":3}}},"3":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}}},"4":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":27},"end":{"line":43,"column":3}}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":39},"end":{"line":29,"column":60}},{"start":{"line":29,"column":60},"end":{"line":null,"column":-1}},{"start":{"line":29,"column":60},"end":{"line":null,"column":-1}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":39},"end":{"line":29,"column":60}},{"start":{"line":29,"column":55},"end":{"line":29,"column":60}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":4,"8":4,"9":4,"10":4,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":1,"18":1,"19":1},"b":{"1":[1,1,0],"2":[1,1]},"f":{"1":1,"2":4,"3":1,"4":0},"code":"import { Component } from '@angular/core';\n\nimport { AppState } from '../app.service';\nimport { Title } from './title';\nimport { XLarge } from './x-large';\n\n\nrequire('aws-sdk/dist/aws-sdk');\n\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'home'\n  selector: 'home',  // <home></home>\n  // We need to tell Angular's Dependency Injection which providers are in our app.\n  providers: [\n    Title\n  ],\n  // Our list of styles in our component. We may add more to compose many styles together\n  styleUrls: [ './home.component.css' ],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n  // Set our default values\n  localState = { value: '' };\n  version: String;\n  // TypeScript public modifiers\n  constructor(public appState: AppState, public title: Title) {\n    console.log(process.env.VERSION);\n    this.version = process.env.VERSION;\n  }\n  ngOnInit() {\n    console.log('Spy: Hello from `Home`');\n    // this.title.getData().subscribe(data => this.data = data);\n  }\n\n\n  submitState(value: string) {\n    console.log('submitState', value);\n    this.appState.set('value', value);\n    this.localState.value = '';\n  }\n}\n","l":{"1":1,"3":1,"4":1,"8":1,"24":1,"26":4,"29":4,"30":4,"31":4,"33":1,"34":1,"39":1,"40":0,"41":0,"42":0,"44":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/home/title/index.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/home/title/index.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}}},"fnMap":{},"branchMap":{},"s":{"1":1},"b":{},"f":{},"code":"export * from './title.service';\n","l":{"1":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/home/title/title.service.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/home/title/title.service.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":5,"column":0},"end":{"line":20,"column":0}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":31}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":22}},"6":{"start":{"line":11,"column":2},"end":{"line":18,"column":3}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":45}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":1}},"10":{"start":{"line":5,"column":0},"end":{"line":20,"column":1}},"11":{"start":{"line":5,"column":13},"end":{"line":5,"column":18}}},"fnMap":{"1":{"name":"(anonymous_0)","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":-1}}},"2":{"name":"Title","line":7,"loc":{"start":{"line":7,"column":31},"end":{"line":9,"column":3}}},"3":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":18,"column":3}}}},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":6,"5":6,"6":1,"7":2,"8":2,"9":1,"10":1,"11":1},"b":{},"f":{"1":1,"2":6,"3":2},"code":"import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class Title {\n  value = 'Angular 2';\n  constructor(public http: Http) {\n\n  }\n\n  getData() {\n    console.log('Title#getData(): Get Data');\n    // return this.http.get('/assets/data.json')\n    // .map(res => res.json());\n    return {\n      value: 'AngularClass'\n    };\n  }\n\n}\n","l":{"1":1,"2":1,"5":1,"6":6,"7":6,"11":1,"12":2,"15":2,"20":1}},
"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/home/x-large/x-large.directive.ts":{"path":"/Users/gkernen/Dev/Apps/ShareTracs/app/src/app/home/x-large/x-large.directive.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":74}},"2":{"start":{"line":9,"column":0},"end":{"line":18,"column":0}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":75}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":1}},"5":{"start":{"line":9,"column":0},"end":{"line":18,"column":1}},"6":{"start":{"line":9,"column":13},"end":{"line":9,"column":19}}},"fnMap":{"1":{"name":"(anonymous_0)","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":-1}}},"2":{"name":"XLarge","line":10,"loc":{"start":{"line":10,"column":53},"end":{"line":17,"column":3}}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":33},"end":{"line":10,"column":53}},{"start":{"line":10,"column":53},"end":{"line":null,"column":-1}},{"start":{"line":10,"column":53},"end":{"line":null,"column":-1}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":33},"end":{"line":10,"column":53}},{"start":{"line":10,"column":45},"end":{"line":10,"column":53}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{"1":[1,1,0],"2":[1,1]},"f":{"1":1,"2":1},"code":"import { Component, Directive, ElementRef, Renderer } from '@angular/core';\n/*\n * Directive\n * XLarge is a simple directive to show how one is made\n */\n@Directive({\n  selector: '[x-large]' // using [ ] means selecting attributes\n})\nexport class XLarge {\n  constructor(element: ElementRef, renderer: Renderer) {\n    // simple DOM manipulation to set font size to x-large\n    // `nativeElement` is the direct reference to the DOM element\n    // element.nativeElement.style.fontSize = 'x-large';\n\n    // for server/webworker support use the renderer\n    renderer.setElementStyle(element.nativeElement, 'fontSize', 'x-large');\n  }\n}\n","l":{"1":1,"9":1,"16":1,"18":1}}}
